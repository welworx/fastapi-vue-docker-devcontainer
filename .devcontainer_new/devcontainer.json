// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
  "name": "FastAPI-VUE",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      "POETRY_VERSION": "1.8.3"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.isort",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",

        "elagil.pre-commit-helper",
        "lextudio.restructuredtext-pack",
        "monosans.djlint",
        "redhat.vscode-yaml",
        "github.copilot",
        "vue.volar",
        "ms-azuretools.vscode-docker"
      ],
      "settings": {
        "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
        "python.testing.pytestPath": "${workspaceFolder}/.venv/bin/pytest",
        "python.formatting.blackPath": "${workspaceFolder}/.venv/bin/black",

        "redhat.telemetry.enabled": false,
        "github.copilot.advanced": {},
        "git.autofetch": true,

        "workbench.colorTheme": "Default Light Modern",

        "notebook.output.scrolling": true,
        "notebook.output.wordWrap": true,
        "notebook.output.textLineLimit": 200,

        "editor.inlineSuggest.enabled": true,
        "editor.inlineSuggest.showToolbar": "always",
        "editor.formatOnSave": true,
        "editor.multiCursorModifier": "ctrlCmd",
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "editor.rulers": [88, 120],
        "black-formatter.args": [
          "--line-length",
          "88",
          "--skip-magic-trailing-comma"
        ],
        "workbench.colorCustomizations": {
          "editorRuler.foreground": "#ff4081"
        },

        "flake8.args": ["--max-line-length=88"],
        "editor.defaultFormatter": "ms-python.black-formatter",

        "[python]": {
          "editor.formatOnType": true,
          "editor.insertSpaces": true,
          "editor.tabSize": 4,
          "editor.formatOnSave": true,
          "editor.defaultFormatter": "ms-python.black-formatter",
          "testing.pytestEnabled": false
        },
        // "editor.defaultFormatter": "esbenp.prettier-vscode",
        // Some kind of bug in VSCode or black oder prettier does not recgonize black
        // for python if prettier is set as default formatter. This is a workadround.
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[toml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[vue]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },

        "[yaml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },

        "editor.codeActionsOnSave": {
          "source.fixAll": true
        },
        "eslint.options": {
          "configFile": "./frontend/vuetify-project/.eslintrc.js"
        },
        "eslint.alwaysShowStatus": true,
        "eslint.format.enable": true
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [8011, 8082],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "uname -a",
  "postCreateCommand": "bash ./.devcontainer/post-install.sh",

  // Configure tool-specific properties.
  // "customizations": {},

  "runArgs": ["--network=host"], // needed for port forwarding
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root",
  "features": {
    "github-cli": "latest"
  },
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/fastapi-vue,type=bind",
  "workspaceFolder": "/workspaces/fastapi-vue"
}
